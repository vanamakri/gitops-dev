name: Build
on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'k8s/**'

  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'k8s/**'

jobs:
  build-and-push:
    runs-on: arc

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Inject Environment Variable
        run: |
          cd src
          ls 
          MESSAGE="${{ secrets.MESSAGE }}"
          sed -i "s/MESSAGE_PLACEHOLDER/$MESSAGE/g" index.html
          cat index.html

      - name: Build Docker Image
        run: |
          sudo docker build -t ${{ secrets.DOCKER_USERNAME }}/k8s-nginx-html:v5 .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/k8s-nginx-html:v5  

  deploy:
    runs-on: arc
    needs: build-and-push          

    steps:  
      - name: Checkout Repository
        uses: actions/checkout@v3  
      #- name: Set up kubectl
        #uses: azure/setup-kubectl@v3
      - name: Installing kubelet
        run: |
          sudo apt-get update -y
          sudo apt-get install -y apt-transport-https ca-certificates curl
          curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /etc/apt/trusted.gpg.d/kubernetes.asc
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update -y
          sudo apt-get install -y kubectl    

      - name: listing the files
        run: |
          ls -R -altr    

      #- name: Remove Namespace & Resources if exists
        #run: |
          #ls
          #cd k8s
          #kubectl delete -f deployment.yaml -n nginx-k8s
          #kubectl delete -f service.yaml -n nginx-k8s
          #kubectl delete namespace nginx-k8s
          #sleep 30 

      - name: Deploy to Kubernetes
        run: |
          ls
          cd k8s
          kubectl create namespace nginx-k8s --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f deployment.yaml -n nginx-k8s --record
          kubectl apply -f service.yaml -n nginx-k8s

      - name: Verify Deployment
        run: kubectl get pods -n nginx-k8s && kubectl get svc -n nginx-k8s

      - name: Remove Docker Image
        run: |
          sudo docker image rm -f ${{ secrets.DOCKER_USERNAME }}/k8s-nginx-html:v5

      - name: Docker logout
        run: | 
          docker logout
