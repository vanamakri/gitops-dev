name: Build
on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'k8s/**'

  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'k8s/**'

jobs:
  build-and-push:
    runs-on: arc

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Inject Environment Variable
        run: |
          cd src
          ls 
          MESSAGE="${{ secrets.MESSAGE }}"
          sed -i "s/MESSAGE_PLACEHOLDER/$MESSAGE/g" index.html
          cat index.html

      - name: Build Docker Image
        run: |
          sudo docker build -t ${{ secrets.DOCKER_USERNAME }}/k8s-nginx-html:v6 .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/k8s-nginx-html:v6 

  deploy:
    runs-on: arc
    needs: build-and-push          

    steps:  
      - name: Checkout Repository
        uses: actions/checkout@v3  
    
      - name: Installing kubectl
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl wget apt-transport-https
          curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl    

      - name: Setup kube-config
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      #- name: listing the files
        #run: |
          #ls -R -altr  
          #kubectl get pods -A  

      - name: Remove Namespace & Resources if exists
        run: |
          #ls
          cd k8s
          kubectl delete -f deployment.yaml -n nginx-k8s
          kubectl delete -f service.yaml -n nginx-k8s
          kubectl delete namespace nginx-k8s
          #sleep 30 

      - name: Deploy to Kubernetes
        run: |
          cd k8s
          #kubectl create namespace nginx-k8s --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace nginx-k8s
          kubectl apply -f deployment.yaml -n nginx-k8s 
          kubectl apply -f service.yaml -n nginx-k8s

      - name: Verify Deployment
        run: kubectl get pods -n nginx-k8s && kubectl get svc -n nginx-k8s

      - name: Remove Docker Image
        run: |
          sudo docker image rm -f ${{ secrets.DOCKER_USERNAME }}/k8s-nginx-html:v5

      - name: Docker logout
        run: | 
          docker logout
